
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mirenordonezdearce
 */
public class EditorTxt extends javax.swing.JFrame {
    int numArchivo = 0;
    File archivo = null;
    String ruta = "";
    /**
     * Creates new form EditorTxt
     */
    public EditorTxt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nombreFichero = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salidaTxt = new javax.swing.JTextArea();
        nuevoDoc = new javax.swing.JButton();
        abrirDoc = new javax.swing.JButton();
        guardarDoc = new javax.swing.JButton();
        guardarComoDoc = new javax.swing.JButton();
        borrarDoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("EditorTxt"));

        nombreFichero.setBackground(new java.awt.Color(153, 204, 255));
        nombreFichero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreFichero.setOpaque(true);

        salidaTxt.setColumns(20);
        salidaTxt.setRows(5);
        jScrollPane1.setViewportView(salidaTxt);

        nuevoDoc.setBackground(new java.awt.Color(153, 204, 255));
        nuevoDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuevoDoc.png"))); // NOI18N
        nuevoDoc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nuevoDoc.setOpaque(true);
        nuevoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoDocActionPerformed(evt);
            }
        });

        abrirDoc.setBackground(new java.awt.Color(153, 204, 255));
        abrirDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/abrirDoc.png"))); // NOI18N
        abrirDoc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        abrirDoc.setOpaque(true);
        abrirDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirDocActionPerformed(evt);
            }
        });

        guardarDoc.setBackground(new java.awt.Color(153, 204, 255));
        guardarDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guardarDoc.png"))); // NOI18N
        guardarDoc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        guardarDoc.setOpaque(true);
        guardarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDocActionPerformed(evt);
            }
        });

        guardarComoDoc.setBackground(new java.awt.Color(153, 204, 255));
        guardarComoDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guardaComoDoc.png"))); // NOI18N
        guardarComoDoc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        guardarComoDoc.setOpaque(true);
        guardarComoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarComoDocActionPerformed(evt);
            }
        });

        borrarDoc.setBackground(new java.awt.Color(153, 204, 255));
        borrarDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrarDoc.png"))); // NOI18N
        borrarDoc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        borrarDoc.setOpaque(true);
        borrarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nombreFichero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abrirDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarComoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrarDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(nombreFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nuevoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(abrirDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardarDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardarComoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(borrarDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoDocActionPerformed
        //Nos crear√° un nuevo fichero en blanco. 
        numArchivo++;
        nombreFichero.setText("Archivo" + numArchivo);
        salidaTxt.setText("");
    }//GEN-LAST:event_nuevoDocActionPerformed

    private void abrirDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirDocActionPerformed
        
        archivo = seleccionarFichero(); //Abre un jFileChooser para elegir el archivo
        ruta = archivo.getName();
        
        try {
            if (archivo.exists()) {
                nombreFichero.setText(ruta);
                leerBufferedReader(archivo);
            } else {
                System.out.println("El fichero no existe");
            }
        } catch (Exception ex){
            System.out.println("Error en la lectura");
        }
    }//GEN-LAST:event_abrirDocActionPerformed

    private void guardarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDocActionPerformed
        //Que guarde los cambios que se hayan hecho en el fichero abierto.
        if (archivo.exists()) {
            try {
            ruta = nombreFichero.getText(); //Coge el nombre del fichero abierto.
            ruta = archivo.getPath(); //Para que coja la ruta relativa
            escribirBufferedWriter(archivo);
            System.out.println("Cambios guardados con √©xito.");
            
            } catch (Exception ex) {
                System.out.println("Error al guardar los cambios");
            }    
        }
    }//GEN-LAST:event_guardarDocActionPerformed

    private void guardarComoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarComoDocActionPerformed
        //Guarda los ficheros que se acaban de crear.
        JFileChooser guardarComo = new JFileChooser();
        guardarComo.showSaveDialog(guardarComo);
        archivo = guardarComo.getSelectedFile();
        
        if (archivo.exists()) { //Si ya existe ese nombre, que tengas que escribir otro 
            System.out.println("Archivo existente, seleccione otro nombre para guardar.");
            guardarComo.showSaveDialog(guardarComo);
            archivo = guardarComo.getSelectedFile();
        }
        else {
            try (FileWriter fw = new FileWriter(archivo)){ //Si no existe otro con ese nombre, lo crea
                fw.write(salidaTxt.getText());
                nombreFichero.setText(archivo.getName());
                System.out.println("Archivo guardado correctamente.");
            } catch (Exception ex) {
                System.out.println("Error al guardar el archivo.");  
            }
        }
    }//GEN-LAST:event_guardarComoDocActionPerformed

    private void borrarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarDocActionPerformed
        //Borra el fichero. 
        ruta = nombreFichero.getText(); //Coge el nombre
        ruta = archivo.getPath(); //Coge la ruta relativa
        archivo = new File(ruta);
            try {
                if (archivo.exists()) {
                    archivo.delete();
                    nombreFichero.setText("");
                    salidaTxt.setText("");
                    System.out.println("Fichero borrado con √©xito.");
                }
            } catch (Exception e) {
                System.out.println("Error al borrar el fichero");
            }
        
    }//GEN-LAST:event_borrarDocActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorTxt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorTxt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorTxt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorTxt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorTxt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirDoc;
    private javax.swing.JButton borrarDoc;
    private javax.swing.JButton guardarComoDoc;
    private javax.swing.JButton guardarDoc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nombreFichero;
    private javax.swing.JButton nuevoDoc;
    private javax.swing.JTextArea salidaTxt;
    // End of variables declaration//GEN-END:variables

    private File seleccionarFichero() {
        //Nos abre un jFileChooser y le pasa el fichero elegido.
        JFileChooser seleccionaFichero = new JFileChooser();
        seleccionaFichero.setMultiSelectionEnabled(false);
        seleccionaFichero.setDialogType(JFileChooser.OPEN_DIALOG);

        int ficheroElegido = seleccionaFichero.showOpenDialog(this);

        if (ficheroElegido == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionaFichero.getSelectedFile();
        }
        else {
            System.out.println("Debes elegir un archivo");
        }
        return archivo;
    }

    private void leerBufferedReader(File archivo) {
        try {
            BufferedReader br = new BufferedReader(new FileReader(archivo));
            
            String linea = br.readLine();
            String textoCompleto = ""; //Aqu√≠ guardamos todas las l√≠neas le√≠das. 
            
            while (linea!=null) {
               textoCompleto = textoCompleto + linea + "\n";
               salidaTxt.setText(textoCompleto);
               linea = br.readLine();
            }
            
            br.close();
            
        } catch (FileNotFoundException ex) {
           System.out.println("Fichero no encontrado");
        } catch (IOException ex) {
           System.out.println("Error");
        }
    }

    private void escribirBufferedWriter(File archivo) {
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(archivo));
            
            bw.write(salidaTxt.getText());
            
            bw.close();
        } catch (IOException ex) {
            System.out.println("Error en la escritura");
        } catch (Exception e) {
            System.out.println("Error");
        }
    }
}
